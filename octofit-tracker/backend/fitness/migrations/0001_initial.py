# Generated by Django 4.2.11 on 2025-09-15 10:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('points_per_minute', models.FloatField(default=1.0, help_text='Points awarded per minute of activity')),
                ('category', models.CharField(choices=[('cardio', 'Cardio'), ('strength', 'Strength Training'), ('flexibility', 'Flexibility'), ('sports', 'Sports'), ('other', 'Other')], default='other', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('recommended_duration', models.IntegerField(help_text='Recommended duration in minutes')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('activity_types', models.ManyToManyField(related_name='workout_suggestions', to='fitness.activitytype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(blank=True, help_text='Height in cm', null=True)),
                ('weight', models.FloatField(blank=True, help_text='Weight in kg', null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('fitness_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('total_points', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('captain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='captained_teams', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('challenge_type', models.CharField(choices=[('individual', 'Individual'), ('team', 'Team')], default='individual', max_length=20)),
                ('target_value', models.IntegerField(help_text='Target value (minutes, points, etc.)')),
                ('target_metric', models.CharField(choices=[('minutes', 'Total Minutes'), ('points', 'Total Points'), ('activities', 'Number of Activities')], default='points', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('participants', models.ManyToManyField(blank=True, related_name='challenges', to=settings.AUTH_USER_MODEL)),
                ('team_participants', models.ManyToManyField(blank=True, related_name='team_challenges', to='fitness.team')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_minutes', models.IntegerField(help_text='Duration in minutes')),
                ('intensity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('distance', models.FloatField(blank=True, help_text='Distance in km (if applicable)', null=True)),
                ('calories_burned', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('date_logged', models.DateTimeField(default=django.utils.timezone.now)),
                ('points_awarded', models.IntegerField(default=0)),
                ('activity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.activitytype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Activities',
                'ordering': ['-date_logged'],
            },
        ),
    ]
